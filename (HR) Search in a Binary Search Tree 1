#include <stdio.h>
#include <stdlib.h>

struct Node {
    int val;
    struct Node *left, *right;
};

struct Node* insert(struct Node* root, int val) {
    if (!root) {
        struct Node* n = (struct Node*)malloc(sizeof(struct Node));
        n->val = val;
        n->left = n->right = NULL;
        return n;
    }
    if (val < root->val)
        root->left = insert(root->left, val);
    else
        root->right = insert(root->right, val);
    return root;
}

int search(struct Node* root, int k) {
    if (!root) return 0;
    if (root->val == k) return 1;
    if (k < root->val)
        return search(root->left, k);
    else
        return search(root->right, k);
}

int main() {
    int n, x, k;
    scanf("%d", &n);
    struct Node* root = NULL;
    for (int i = 0; i < n; i++) {
        scanf("%d", &x);
        root = insert(root, x);
    }
    scanf("%d", &k);

    if (search(root, k))
        printf("Found\n");
    else
        printf("Not Found\n");

    return 0;
}
